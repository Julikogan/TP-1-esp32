#include <WiFi.h>
#include <WebServer.h>  // Librería para crear el servidor web

// Credenciales de tu red WiFi
const char* ssid = "IoTB";
const char* password = "inventaronelVAR";

// Pin donde está conectado el relay
const int relayPin = 2;  // Cambia al pin donde conectes el relay

// Inicializa el servidor en el puerto 80 (HTTP)
WebServer server(80);

void handleRoot() {
  // Página web sencilla con botones para encender y apagar el relay
  String html = "<html>\
                  <body>\
                    <h1>Control de Relay</h1>\
                    <p>Estado actual: ";
                    
  if (digitalRead(relayPin) == HIGH) {
    html += "APAGADO</p>";
  } else {
    html += "ENCENDIDO</p>";
  }

  html += "<button onclick=\"window.location.href='/encender'\">Encender Relay</button>\
           <button onclick=\"window.location.href='/apagar'\">Apagar Relay</button>\
           </body>\
           </html>";
  
  server.send(200, "text/html", html);
}

void encenderRelay() {
  digitalWrite(relayPin, LOW);  // LOW para encender el relay (depende del tipo de módulo relay)
  server.sendHeader("Location", "/");  // Redirige a la página principal
  server.send(303);
}

void apagarRelay() {
  digitalWrite(relayPin, HIGH);  // HIGH para apagar el relay
  server.sendHeader("Location", "/");
  server.send(303);
}

void setup() {
  // Configura el pin del relay como salida
  pinMode(relayPin, OUTPUT);
  digitalWrite(relayPin, HIGH);  // El relay comienza apagado

  // Inicia la comunicación serial
  Serial.begin(115200);

  // Conecta el ESP32 a la red WiFi
  WiFi.begin(ssid, password);
  Serial.println("Conectando a WiFi...");

  while (WiFi.status() != WL_CONNECTED) {
    delay(1000);
    Serial.println("Conectando...");
  }

  Serial.println("Conectado a la red WiFi");
  Serial.println(WiFi.localIP());  // Muestra la dirección IP del ESP32

  // Rutas del servidor web
  server.on("/", handleRoot);
  server.on("/encender", encenderRelay);
  server.on("/apagar", apagarRelay);

  // Inicia el servidor
  server.begin();
}

void loop() {
  // Escucha las peticiones HTTP
  server.handleClient();
}

